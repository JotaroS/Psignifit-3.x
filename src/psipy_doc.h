#ifndef PSIPYDOC_H
#define PSIPYDOC_H

static char psibootstrap_doc [] =
"bootstrap ( data, start=None, nsamples=2000, nafc=2, sigmoid=\"logistic\", core=\"ab\", priors=None )\n"
"parametric bootstrap of a psychometric function\n"
"\n"
":Parameters:\n"
"\n"
"  data      A list of lists or an array of data. The first column should be stimulus intensity,\n"
"            the second column should be number of correct responses (in 2AFC) or number of yes-\n"
"            responses (in Yes/No), the third column should be number of trials\n"
"  start     generating values for the bootstrap samples. If this is None, the generating value\n"
"            will be the MAP estimate\n"
"  nsamples  number of bootstrap samples to be drawn\n"
"  nafc      number of alternatives for nAFC tasks. If nafc==1 a Yes/No task is assumed\n"
"  sigmoid   name of the sigmoid to be fitted. Valid sigmoids are currently\n"
"               logistic\n"
"               gauss\n"
"               gumbel_l\n"
"               gumbel_r\n"
"  core      \"core\"-type of the psychometric function. Valid choices are currently\n"
"               ab       (x-a)/b\n"
"               mw%g     midpoint and width\n"
"               linear   a+bx\n"
"               log      a+b log(x)\n"
"  priors    constraints on the likelihood estimation. These are expressed in the form of a list of\n"
"            prior names. Valid prior are currently\n"
"               Uniform(%g,%g)\n"
"               Gauss(%g,%g)\n"
"               Beta(%g,%g)\n"
"               Gamma(%g,%g)\n"
"               nGamma(%g,%g)\n"
"            if an invalid prior is selected, no constraints are imposed at all.\n"
"  cuts      a single number or a sequence of 'cuts' indicating the performances that should be\n"
"            considered 'threshold' performances. This means that in a 2AFC task, cuts==0.5 the\n"
"            'threshold' is somewhere around 75%% correct performance, depending on the lapse rate\n"
"  parametric boolean to indicate whether or not the bootstrap procedure should be parametric or not.\n"
"\n"
":Output:\n"
"  samples,estimates,deviance,threshold,bias,acceleration,Rkd,Rpd,outliers,influential\n"
"\n"
"  samples   a nsamplesXnblocks array of the bootstrap sampled data\n"
"  estimates a nsamplesXnparameters array of estimated parameters associated with the data sets\n"
"  deviance  a nsamples array of the associated deviances\n"
"  threshold a nsamples array of thresholds\n"
"  bias      a ncuts array of the bias term associated with the threshold\n"
"  acc       a ncuts array of the acceleration constant associated with the threshold\n"
"  Rkd       a nsamples array of correlations between block index and deviance residuals\n"
"  Rpd       a nsamples array of correlations between model prediction and deviance residuals\n"
"  outliers  a nblocks array indicating points that are outliers\n"
"  influential a nblocks array indicating points that are influential observations\n"
"\n"
"\n"
":Example:\n"
">>> x = [float(2*k) for k in xrange(6)]\n"
">>> k = [34,32,40,48,50,48]\n"
">>> n = [50]*6\n"
">>> d = [[xx,kk,nn] for xx,kk,nn in zip(x,k,n)]\n"
">>> priors = ('flat','flat','Uniform(0,0.1)')\n"
">>> samples,est,D,thres,bias,acc,Rkd,Rpd,out,influ = bootstrap(d,nsamples=2000,priors=priors)\n"
">>> mean(est[:,0])\n"
"2.7762481672120902\n"
">>> mean(est[:,1])\n"
"1.4243919674602623\n"
"\n";

static char psimcmc_doc [] =
"mcmc ( data, start=None, nsamples=10000, nafc=2, sigmoid='logistic', core='ab', priors=None, stepwidths=None )\n"
"\n"
"Markov Chain Monte Carlo sampling for a psychometric function.\n"
"\n"
":Parameters:\n"
"\n"
"  data      A list of lists or an array of data. The first column should be stimulus intensity,\n"
"            the second column should be number of correct responses in (nAFC) or number of yes-\n"
"            responses (in Yes/No), the third column should be number of trials\n"
"  start     starting values for the markov chain. If this is None, the MAP estimate will be used\n"
"  nsamples  number of samples to be taken from the posterior (note that due to suboptimal sampling,\n"
"            this number may be much lower than the effective number of samples.\n"
"  nafc      number of responses alternatives for nAFC tasks. If nafc==1 a Yes/No task is assumed\n"
"  sigmoid   name of the sigmoid to be fitted. Valid sigmoids are currently\n"
"               logistic\n"
"               gauss\n"
"               gumbel_l\n"
"               gumbel_r\n"
"  core      \"core\"-type of the psychometric function. Valid choices are currently\n"
"               ab     (x-a)/b\n"
"               mw%g   midpoint and width\n"
"               linear a+bx\n"
"               log    a+b log(x)\n"
"  priors    prior distributions on the parameters of the psychometric function. These are expressed\n"
"            in the form of a list of prior names. Valid prior names are currently\n"
"               Uniform(%g,%g)\n"
"               Gauss(%g,%g)\n"
"               Beta(%g,%g)\n"
"               Gamma(%g,%g)\n"
"               nGamma(%g,%g)\n"
"            if an invalid prior is selected, no constraints are imposed on that parameter resulting\n"
"            in an improper prior distribution.\n"
"  stepwidths standard deviations of the proposal distribution. The best choice is sometimes a bit\n"
"            tricky here. However, as a rule of thumb we can state: if the stepwidths are too small,\n"
"            the samples might not cover the whole posterior, if the stepwidths are too large, most\n"
"            steps will leave the area of high posterior density and will therefore be rejected.\n"
"            Thus, in general stepwidths should be somewhere in the middle.\n"
"\n"
":Output:\n"
"  estimates,deviances,posterior_predictive_data,posterior_predictive_deviances\n"
"\n"
"  estimates a nsamplesXnparameters array of parameters sampled from the posterior density\n"
"            of parameters given the data\n"
"  deviances a nsamples array of associated deviances\n"
"  posterior_predictive_data are data that are simulated by sampling from the joint posterior of\n"
"            data and parameters. They are important for model checking.\n"
"  posterior_predictive_deviances are the deviances that are associated with the posterior predictive\n"
"            data. A particular way of model checking could be to compare the deviances and the posterior\n"
"            predicitive deviances. For a good model these should be relatively similar.\n"
"\n"
"\n"
":Example:\n"
">>> x = [float(2*k) for k in xrange(6)]\n"
">>> k = [34,32,40,48,50,48]\n"
">>> n = [50]*6\n"
">>> d = [[xx,kk,nn] for xx,kk,nn in zip(x,k,n)]\n"
">>> priors = ('Gauss(0,1000)','Gauss(0,1000)','Beta(3,100)')\n"
">>> stepwidths = (1.,1.,0.01)\n"
">>> estimates,deviances = mcmc(d,nsamples=10000),priors=priors,stepwidths=stepwidths)\n"
">>> mean(estimates[:,0])\n"
"2.4881405291765764\n"
">>> mean(estimates[:,1])\n"
"1.6920641469955848\n"
"\n";

static char psimapestimate_doc [] =
"mapestimate ( data, nafc=2, sigmoid='logistic', core='ab', priors=None )\n"
"\n"
"MAP or constrained maximum likelihood estimation for a psychometric function\n"
"\n"
":Parameters:\n"
"  data       an array or a list with three columns, the first of which contains stimulus intensity, the second\n"
"             contains the number of correct responses (in nAFC) or the number of 'Yes' responses (in Yes/No),\n"
"             the third column contains the number of trials.\n"
"  nafc       number of response alternatives in an nAFC task. For Yes/No tasks, nafc should be 1\n"
"  sigmoid    type of the sigmoid to be fitted. Valid choices are:\n"
"                'logistic'\n"
"                'gauss'\n"
"                'gumbel_l'\n"
"                'gumbel_r'\n"
"  core       term inside the sigmoid. Valid choices are:\n"
"                'ab'       (x-a)/b\n"
"                'mw%g'     midpoint and width\n"
"                'linear'   a+bx\n"
"                'log'      a+b log(x)\n"
"  priors     constraints to be imposed on the fitting procedure. This should be a list of strings indicating\n"
"             the imposed constraints. Valid choices are:\n"
"                'Uniform(%g,%g)'     Uniform prior on interval\n"
"                'Gauss(%g,%g)'       Gaussian with mean and standard deviation\n"
"                'Beta(%g,%g)'        Beta distribution\n"
"                'Gamma(%g,%g)'       Gamma distribution\n"
"                #nGamma(%g,%g)'      Gamma distribution on the negative axis\n"
"             If an invalid prior is selected, no constraints are imposed on that parameter, resulting in\n"
"             an improper prior distribution.\n"
"\n"
":Output:\n"
"  estimate,deviance\n"
"  estimate  a nparameters array of estimated parameters\n"
"  deviance  the deviance associated with the estimated parameters\n"
"\n"
":Example:\n"
">>> x = [float(2*k) for k in xrange(6)]\n"
">>> k = [34,32,40,48,50,48]\n"
">>> n = [50]*6\n"
">>> d = [[xx,kk,nn] for xx,kk,nn in zip(x,k,n)]\n"
">>> priors = ('flat','flat','Uniform(0,0.1)')\n"
">>> estimate,deviance = mapestimate ( d, priors=priors )\n"
">>> estimate\n"
"array([2.751768597693296, 1.4572372412562276, 0.015556356934318862], 'd')\n"
">>> deviance\n"
"8.071331367479198\n";


static char psidiagnostics_doc [] =
"diagnostics ( data, params, nafc=2, sigmoid='logistics', core='ab', cuts=None )\n"
"\n"
"Some diagnostic statistics for a psychometric function fit\n"
"\n"
":Parameters:\n"
"  data     a list of lists or an array containing stimulus intensity in the first column, number of\n"
"           correct responses (for nAFC) or number of Yes-responses (for Yes/No) in the second column,\n"
"           and total number of trials in the third column.\n"
"           Alternatively, only the intensities can be given. In that case, we only obtain the predicted\n"
"           values\n"
"  nafc     number of response alternatives in nAFC tasks. For Yes/No tasks, this should be 1.\n"
"  sigmoid  type of the sigmoid that was used for fitting. Valid choices are:\n"
"             'logistic'\n"
"             'gauss'\n"
"             'gumbel_l'\n"
"             'gumbel_r'\n"
"  core     term inside the sigmoid, i.e. in most cases the parameterization of the sigmoid. Valid\n"
"           choices are:\n"
"              'ab'      (x-a)/b\n"
"              'mw%g'    midpoint and width\n"
"              'linear'  a+bx\n"
"              'log'     a+b log(x)\n"
"  cuts     cuts at which thresholds should be determined. That is if cuts = (.25,.5,.75), thresholds\n"
"           (F^{-1} ( 0.25 ), F^{-1} ( 0.5 ), F^{-1} ( 0.75 )) are returned. Here F^{-1} denotes the inverse\n"
"           of the function specified by sigmoid. If cuts==None, this is modified to cuts=[0.5]. In any case,\n"
"           cuts should be a sequence!\n"
"\n"
":Output:\n"
"  predicted(,devianceresiduals,deviance,Rpd,Rkd)\n"
"  predicted          predicted values associated with the respective stimulus intensities\n"
"  devianceresiduals  deviance residuals of the data\n"
"  deviance           deviance of the data\n"
"  thres              threshold / thresholds for the specified cuts\n"
"  Rpd                correlation between predicted performance and deviance residuals\n"
"  Rkd                correlation between block index and deviance residuals\n"
"\n"
":Example:\n"
">>> x = [float(2*k) for k in xrange(6)]\n"
">>> k = [34,32,40,48,50,48]\n"
">>> n = [50]*6\n"
">>> d = [[xx,kk,nn] for xx,kk,nn in zip(x,k,n)]\n"
">>> prm = [2.75, 1.45, 0.015]\n"
">>> pred,di,D,Rpd,Rkd = _psipy.diagnostics(d,prm)\n"
">>> D\n"
"8.0748485860836254\n"
">>> di[0]\n"
"1.6893279652591433\n"
">>> Rpd\n"
"-0.19344675783032761\n";


#endif
